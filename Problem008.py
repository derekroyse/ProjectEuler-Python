# Author: Derek Royse
# Project Euler - Problem 008:
# The four adjacent digits in the 1000-digit number that have 
# the greatest product are 9 × 9 × 8 × 9 = 5832.

# 73167176531330624919225119674426574742355349194934
# 96983520312774506326239578318016984801869478851843
# 85861560789112949495459501737958331952853208805511
# 12540698747158523863050715693290963295227443043557
# 66896648950445244523161731856403098711121722383113
# 62229893423380308135336276614282806444486645238749
# 30358907296290491560440772390713810515859307960866
# 70172427121883998797908792274921901699720888093776
# 65727333001053367881220235421809751254540594752243
# 52584907711670556013604839586446706324415722155397
# 53697817977846174064955149290862569321978468622482
# 83972241375657056057490261407972968652414535100474
# 82166370484403199890008895243450658541227588666881
# 16427171479924442928230863465674813919123162824586
# 17866458359124566529476545682848912883142607690042
# 24219022671055626321111109370544217506941658960408
# 07198403850962455444362981230987879927244284909188
# 84580156166097919133875499200524063689912560717606
# 05886116467109405077541002256983155200055935729725
# 71636269561882670428252483600823257530420752963450

# Find the thirteen adjacent digits in the 1000-digit number 
# that have the greatest product. What is the value of this product?
    
theNumber=("7316717653133062491922511967442657474235534919493496983520312774506"
"326239578318016984801869478851843858615607891129494954595017379583319528532088"
"0551112540698747158523863050715693290963295227443043557668966489504452445231617"
"31856403098711121722383113622298934233803081353362766142828064444866452387493035"
"89072962904915604407723907138105158593079608667017242712188399879790879227492190"
"169972088809377665727333001053367881220235421809751254540594752243525849077116705"
"5601360483958644670632441572215539753697817977846174064955149290862569321978468622"
"48283972241375657056057490261407972968652414535100474821663704844031998900088952434"
"50658541227588666881164271714799244429282308634656748139191231628245861786645835912"
"45665294765456828489128831426076900422421902267105562632111110937054421750694165896"
"04080719840385096245544436298123098787992724428490918884580156166097919133875499200"
"52406368991256071760605886116467109405077541002256983155200055935729725716362695618"
"82670428252483600823257530420752963450")

limit = 13
largestSubstring = ""
largestProduct = 0
tempProduct = 1

for i in range(len(theNumber)-(limit-1)):
    currentSubstring = theNumber[i:i+limit]
    for j in range(limit):
        tempProduct =  int(currentSubstring[j]) * tempProduct
    if tempProduct > largestProduct:
        largestProduct = tempProduct
        largestSubstring = currentSubstring
    tempProduct = 1

print(largestProduct)      
